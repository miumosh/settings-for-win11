{
  // -------------------------------------------------------------------------------------------
  // File
  "files.eol": "\n",
  "files.autoSave": "afterDelay",
  "files.autoGuessEncoding": true,
  "files.exclude": { "**/*:Zone.Identifier": true },
  // Editor
  "editor.tabSize": 2,
  "editor.mouseWheelZoom": true,
  "editor.minimap.enabled": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
  // -------------------------------------------------------------------------------------------
  // Formatter
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  // -------------------------------------------------------------------------------------------
  // JavaScript
  "emmet.includeLanguages": { "javascript": "javascriptreact" },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "material-ui-snippets.showNotesOnStartup": false,
  "editor.quickSuggestions": { "strings": true }, // for TailwindCSS auto completion
  // TypeScript
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  // Prisma
  "[prisma]": { "editor.defaultFormatter": "Prisma.prisma" },
  // -------------------------------------------------------------------------------------------
  // Window
  "window.commandCenter": true,
  // WrapTab / Workspace
  "workbench.editor.wrapTabs": true,
  "security.workspace.trust.untrustedFiles": "open",
  // -------------------------------------------------------------------------------------------
  // Live
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.CustomBrowser": "chrome",
  "liveshare.launcherClient": "visualStudioCode",
  // -------------------------------------------------------------------------------------------
  // Explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // -------------------------------------------------------------------------------------------
  // Notion
  "VSCodeNotion.accessToken": "",
  // DrawIo
  "hediet.vscode-drawio.theme": "dark",
  "hediet.vscode-drawio.resizeImages": null,
  // plantuml
  "plantuml.render": "PlantUMLServer",
  "plantuml.server": "http://localhost:8080",
  // Kubernetes
  "vs-kubernetes": {
    "vs-kubernetes.minikube-show-information-expiration": "2023-10-06T23:59:44.300Z"
  },
  // Github Copilot
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false,
    "yaml": true,
    "sql": true
  },
  // GCP BigQuery
  // "bigqueryRunner.defaultDataset.datasetId": "bigquery-public-data.github_repos",
  // "bigqueryRunner.defaultDataset.datasetId": "myk-project-383411.test",
  "bigqueryRunner.projectId": "myk-project-383411", // Change here if you want to refer to an external project/dataset. Note, however, that authentication will result in an error.
  "bigqueryRunner.keyFilename": "/home/miyakei/.config/myk-project-383411-996f6890bdaa.json",
  "files.associations": {
    "*.bqsql": "sql"
  },
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace"
  },
  "[python]": {
    "editor.tabSize": 4
  },
  "[sql]": {
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  },
  "Prettier-SQL.commaPosition": "before", // Where to place commas for SELECT and GROUP BY clauses
  "Prettier-SQL.denseOperators": false, // Whether to strip whitespace around operators such as + or >=
  "Prettier-SQL.ignoreTabSettings": false, // Whether to ignore VSCode user/workspace settings for tabSize and insertSpaces
  "Prettier-SQL.expressionWidth": 120, // Number of characters allowed in each line before breaking
  "Prettier-SQL.indentStyle": "standard", // Switched between standard keyword positioning vs maintaining a central space column
  "Prettier-SQL.insertSpacesOverride": true, // Overrides insertSpaces if Prettier-SQL.ignoreTabSettings is enabled
  "Prettier-SQL.keywordCase": "preserve", // Whether to print keywords in ALL CAPS or lowercase
  "Prettier-SQL.linesBetweenQueries": 4, // How many newlines to place between each query / statement
  "Prettier-SQL.logicalOperatorNewline": "before", // Whether to break before or after AND and OR
  "Prettier-SQL.newlineBeforeSemicolon": false, // Whether to place semicolon on its own line or on previous line
  "Prettier-SQL.SQLFlavourOverride": "bigquery", // Uses custom SQL Flavour to format sql files. Use this if you are using the Microsoft PostgreSQL or MSSQL Extensions since they do not provide a new language ID for VSCode.
  "Prettier-SQL.tabSizeOverride": 4, // Overrides tabSize if Prettier-SQL.ignoreTabSettings is enabled
  "Prettier-SQL.tabulateAlias": false,
  "[sql-bigquery]": {
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  }
  // -------------------------------------------------------------------------------------------
  // Vim
  // "vim.normalModeKeyBindings": [
  //   {"before": ["<C-u>"], "after": ["<C-p>"]},
  //   {"before": ["<C-d>"], "after": ["<C-n>"]},
  //   {"before": ["down"],  "after": ["g", "j"]},
  //   {"before": ["up"],    "after": ["g", "k"]},
  // ]
  // "vim.handleKeys": {"<C-d>": true, "<C-u>": true},
  // -------------------------------------------------------------------------------------------
  // PasteImage
  // "pasteImage.basePath": "${currentFileDir}/..",
  // "pasteImage.insertPattern": "${imageSyntaxPrefix}/${imageFilePath}${imageSyntaxSuffix}",
  // "pasteImage.path": "${currentFileDir}/images"

  // -------------------------------------------------------------------------------------------
  // memo
  // -------------------------------------------------------------------------------------------
  // for .prettierrc
  // {
  //   "printWidth": 100,
  //   "trailingComma": "es5",
  //   "tabWidth": 2,
  //   "semi": true,
  //   "singleQuote": true,
  //   "endOfLine": "lf"
  // }

  // for .devcontainer/devcontainer.json
  // {
  //   "name": "workspace",
  //   "dockerComposeFile": ["docker-compose.yml"],
  //   "service": "workspace",
  //   "workspaceFolder": "/workspace", # ここを変更
  //   "remoteUser": "vscode",
  //   "shutdownAction": "stopCompose",
  //   "extensions": [
  //      "dbaeumer.vscode-eslint",
  //      "esbenp.prettier-vscode",
  //      "ms-vscode.vscode-typescript-tslint-plugin",
  //      "ms-vscode.vscode-typescript-next",
  //    ]
  // }

  // for .eslintrc.cjs
  // module. exports = {
  //   env: {
  //      es2021: true,
  //      node: true,
  //   },
  //   extends: [
  //      "estint: recommended",
  //      "plugin:@typescript-eslint/recommended",
  //      "plugin:@typescript-eslint/recommended-requiring-type-checking",
  //   ],
  //   overrides: [],
  //   parser: "@typescript-eslint/parser",
  //   parserOptions: {
  //      ecmaVersion: "latest"
  //      sourceType: "module",
  //      tsconfigRootDir: __dirname,
  //      project: ["tsconfig.eslint. json"],
  //   },
  //   plugins: ["@typescript-eslint"],
  //   rules: {},
  // };

  // for tsconfig.eslint.json
  // {
  //   "extends": "./tsconfig.json",
  //   "include": [".eslintrc.cjs", "src/**/*"],
  // }
}
